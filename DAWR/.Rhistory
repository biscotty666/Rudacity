getwd()
statesInfo <- read.csv('stateData.csv')
View(statesInfo)
View(statesInfo)
subset(statesInfo, state.region == 1)
statesInfo[statesInfo$state.region, ] # the blank selects all columns
stateSubset <- subset(statesInfo, state.region == 1)
head(stateSubset)
dim(stateSubset)
stateSubsetBracket = statesInfo[statesInfo$state.region, ] # the blank selects all columns
head(stateSubsetBracket)
dim(stateSubsetBracket)
stateSubsetBracket = statesInfo[statesInfo$state.region == 1, ] # the blank selects all columns
head(stateSubsetBracket)
dim(stateSubsetBracket)
?cars
str(cars)
plot(cars)
plot(cars)
plot(cars)
summary(mtcars)
cars
row.names(cars)
col.names(cars)
colnames(cars)
efficient <- subset(mtcars, mpg >= 23)
View(efficient)
View(efficient)
udacious <- c("Chris Saden", "Lauren Castellano",
"Sarah Spikes","Dean Eckles",
"Andy Brown", "Moira Burke",
"Kunal Chawla")
numbers <- c(1:10)
numbers
numbers <- c(numbers, 11:20)
numbers
udacious <- c("Chris Saden", "Lauren Castellano",
"Sarah Spikes","Dean Eckles",
"Andy Brown", "Moira Burke",
"Kunal Chawla", "Brian Carey")
mystery = nchar(udacious)
mystery = nchar(udacious)
mystery
mystery = nchar(udacious)
mystery
mystery == 11
udacious[mystery == 11]
data(mtcars)
names(mtcars)
?mtcars
mtcars
str(mtcars)
dim(mtcars)
# 10. Read the documentation for row.names if you're want to know more.
?row.names
# Run this code to change the row names of the cars to numbers.
row.names(mtcars) <- c(1:32)
# Now print out the data frame by running the code below.
mtcars
data(mtcars)
head(mtcars, 10)
# The head() fucntion prints out the first six rows of a data frame
# by default. Run the code below to see.
head(mtcars)
# I think you'll know what this does.
tail(mtcars, 3)
mtcars$mpg
mtcars$hp
mtcars$cyl
mean(mtcars$mpg)
mean(mtcars$mpg)
reddit <- read.csv('reddit.csv')
str(reddit)
table(reddit$employment.status)
summary(reddit)
levels(reddit$age.range)
reddit$age.range = as.factor(reddit$age.range)
str(reddit)
reddit[sapply(reddit, is.character)] <- lapply(reddit[sapply(reddit, is.character)],
as.factor)
str(reddit)
levels(reddit$age.range)
library(ggplot2)
qplot(data = reddit, x = age.range)
reddit <- read.csv('reddit.csv')
table(reddit$employment.status)
summary(reddit)
levels(reddit$age.range)
str(reddit)
reddit[sapply(reddit, is.character)] <-
lapply(reddit[sapply(reddit, is.character)], as.factor)
levels(reddit$age.range)
library(ggplot2)
qplot(data = reddit, x = age.range)
reddit.order
reddit.order <- ordered(reddit, levels = c("Under 18","18-24","25-34","35-44","45-54","55-64","65 or Above","NA"))
reddit.order
qplot(data = reddit.order, x = age.range)
ses.order <- ordered(ses, levels = c("low", "middle", "high"))
ses <- c("low", "middle", "low", "low", "low", "low", "middle", "low", "middle",
"middle", "middle", "middle", "middle", "high", "high", "low", "middle",
"middle", "low", "high")
is.factor(ses)
is.factor(ses)
ses.f <- factor(ses, levels = c("low", "middle", "high"))
is.factor(ses.f)
levels(ses.f)
ses.order <- ordered(ses, levels = c("low", "middle", "high"))
ses
ses.order
reddit.order
reddit.order <- ordered(reddit, levels = c("Under 18","18-24","25-34","35-44","45-54","55-64","65 or Above","NA"))
reddit.order
---
title: "Lesson2"
---
title: "Lesson 2"
---
title: "Lesson2"
---
title: "Lesson"
---
title: "R Notebook 1"
---
title: "R Notebook"
plot(cars)
plot(cars)
plot(cars)
pf <- read.csv('datasets/psuedo_facebook.tsv', sep = '\t')
pf <- read.csv('../datasets/psuedo_facebook.tsv', sep = '\t')
getwd()
pf <- read.csv('psuedo_facebook.tsv', sep = '\t')
pf <- read.csv('psuedo_facebook.tsv')
pf <- read.csv('reddit.csv')
pf <- read.csv('psuedo_facebook.tsv', sep = "\t")
pf <- read.delim('pseudo_facebook.tsv')
pf <- read.delim('pseudo_facebook.tsv')
name(pf)
names(pf)
library(ggplot2)
names(pf)
pf <- read.delim('pseudo_facebook.tsv')
***
### Histogram of Users' Birthdays
Notes:
# install.packages('ggplot2')
library(ggplot2)
names(pf)
qplot(x = dob_day, data = pf)
qplot(x = dob_day, data = pf) +
scale_x_discrete(breaks=1:31)
?scale_x_discrete
qplot(x = dob_day, data = pf) +
scale_x_continuous(breaks=1:31)
ggplot(aes(x = dob_day), data = pf) +
geom_histogram(binwidth = 1) +
scale_x_continuous(breaks = 1:31)
qplot(x = dob_day, data = pf) +
scale_x_continuous(breaks=1:31) +
facet_wrap(~dob_month, ncol = 3)
qplot(x = dob_day, data = pf) +
scale_x_continuous(breaks=1:31) +
facet_wrap(~dob_month, ncol = 3)
ggplot(data = pf, aes(x = dob_day)) +
geom_histogram(binwidth = 1) +
scale_x_continuous(breaks = 1:31) +
facet_wrap(~dob_month)
ggplot(data = pf, aes(x = dob_day)) +
geom_histogram(binwidth = 1) +
scale_x_continuous(breaks = 1:31) +
facet_wrap(~dob_month)
qplot(x = friend_count, data = pf)
qplot(x = friend_count, data = pf, xlim = c(0, 1000))
qplot(x = friend_count, data = pf) +
, scale_x_continuous(limits = c(0, 1000))
qplot(x = friend_count, data = pf) +
scale_x_continuous(limits = c(0, 1000))
ggplot(aes(x = friend_count), data = pf) +
geom_histogram() +
scale_x_continuous(limits = c(0, 1000))
qplot(x = friend_count, data = pf, binwidth = 25) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50))
qplot(x = friend_count, data = pf) +
facet_grid(gender ~ .)
qplot(x = friend_count, data = pf, binwidth = 10) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50)) +
facet_wrap(~gender)
qplot(x = friend_count, data = subset(pf, !is.na(gender)), binwidth = 10) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50)) +
facet_wrap(~gender)
ggplot(aes(x = friend_count), data = subset(pf, !is.na(gender))) +
geom_histogram() +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50)) +
facet_wrap(~gender)
table(pf$gender)
?by
by(pf$friend_count, pf$gender, summary)
qplot(x = tenure, data = pf,
color = I('black), fill = I('#099009))
qplot(x = tenure, data = pf,
color = I('black), fill = I('#099009'))
qplot(x = tenure, data = pf,
color = I('black'), fill = I('#099009'))
qplot(x = tenure, data = pf,
color = I('black'), fill = I('#099DD9'))
qplot(x = tenure, data = pf, binwidth = 30,
color = I('black'), fill = I('#099DD9'))
ggplot(aes(x = tenure), data = pf) +
geom_histogram(binwidth = 30, color = 'black', fill = '#099DD9')
ggplot(aes(x = tenure/365), data = pf) +
geom_histogram(binwidth = .25, color = 'black', fill = '#F79420')
qplot(x = tenure/365, data = pf,
color = I('black'), fill = I('#F79420')) +
scale_x_continuous(breaks = seq(1, 7, 1), lim = c(0,7))
qplot(x = tenure/365, data = pf,
xlab = 'Number of years using Facebook',
ylab = 'Number of users in sample',
color = I('black'), fill = I('#F79420')) +
scale_x_continuous(breaks = seq(1, 7, 1), lim = c(0,7))
qplot(x = age, data = pf)
qplot(x = age, data = pf,
xlab = 'Age', ylab = 'Number of users')
qplot(x = age, data = pf,
xlab = 'Age', ylab = 'Number of users',
color = I('blue'), fill = I('green'))
qplot(x = age, data = pf, binwidth = 5,
xlab = 'Age', ylab = 'Number of users',
color = I('blue'), fill = I('green'))
qplot(x = age, data = pf, binwidth = 3,
xlab = 'Age', ylab = 'Number of users',
color = I('blue'), fill = I('green'))
qplot(x = age, data = pf, binwidth = 2,
xlab = 'Age', ylab = 'Number of users',
color = I('blue'), fill = I('green'))
qplot(x = age, data = pf, binwidth = 1,
xlab = 'Age', ylab = 'Number of users',
color = I('blue'), fill = I('green'))
qplot(x = age, data = pf, binwidth = 2,
xlab = 'Age', ylab = 'Number of users',
color = I('blue'), fill = I('green'))
qplot(x = age, data = pf, binwidth = 2,
xlab = 'Age', ylab = 'Number of users',
color = I('blue'), fill = I('green')) +
scale_x_continuous(breaks = seq(0, 110, 10), lim=c(0,110))
qplot(x = age, data = pf, binwidth = 2,
xlab = 'Age', ylab = 'Number of users',
color = I('blue'), fill = I('green')) +
scale_x_continuous(breaks = seq(0, 110, 5), lim=c(0,110))
ggplot(aes(x = age), data = pf) +
geom_histogram(binwidth = 1, fill = '#5760AB') +
scale_x_continuous(breaks = seq(0, 113, 5))
qplot(x = age, data = pf, binwidth = 1,
xlab = 'Age', ylab = 'Number of users',
color = I('blue'), fill = I('green')) +
scale_x_continuous(breaks = seq(0, 110, 5), lim=c(0,110))
ggplot(aes(x = age), data = pf) +
geom_histogram(binwidth = 1, fill = '#5760AB') +
scale_x_continuous(breaks = seq(0, 113, 5))
qplot(x = age, data = pf, binwidth = 1,
xlab = 'Age', ylab = 'Number of users',
color = I('blue'), fill = I('green')) +
scale_x_continuous(breaks = seq(0, 110, 5), lim=c(12,110))
qplot(x = age, data = pf, binwidth = 1,
xlab = 'Age', ylab = 'Number of users',
color = I('blue'), fill = I('green')) +
scale_x_continuous(breaks = seq(0, 110, 5), lim=c(13,110))
qplot(x = age, data = pf, binwidth = 1,
xlab = 'Age', ylab = 'Number of users',
color = I('blue'), fill = I('green')) +
scale_x_continuous(breaks = seq(0, 110, 5), lim=c(12,110))
qplot(x = age, data = pf, binwidth = 1,
xlab = 'Age', ylab = 'Number of users',
color = I('blue'), fill = I('green')) +
scale_x_continuous(breaks = seq(0, 110, 5), lim=c(14,110))
qplot(x = age, data = pf, binwidth = 1,
xlab = 'Age', ylab = 'Number of users',
color = I('blue'), fill = I('green')) +
scale_x_continuous(breaks = seq(0, 110, 5), lim=c(13,110))
qplot(x = friend_count, data = pf)
summary(pf$friend_count)
summary(log10(pf$friend_count))
summary(log10(pf$friend_count + 1))
summary(sqrt(pf$friend_count + 1))
install.packages("gridExtra")
library('gridExtra')
library('gridExtra')
p1 <- qplot(x = friend_count, data = pf)
p2 <- qplot(x = log10(friend_count + 1), data = pf)
p3 <- qplot(x = sqrt(friend_count), data = pf)
library('gridExtra')
p1 <- qplot(x = friend_count, data = pf)
p2 <- qplot(x = log10(friend_count + 1), data = pf)
p3 <- qplot(x = sqrt(friend_count), data = pf)
grid.arrange(p1, p2, p3, ncol = 1)
p1 <- ggplot(aes(x = friend_count), data = pf) +
geom_histogram()
p2 <- p1 + scale_x_log10()
p3 <- p1 + scale_x_sqrt()
grid.arrange(p1, p2, p3, ncol = 1)
logScale <- qplot(x = log10(friend_count + 1), data = pf)
countScale <- ggplot(aes(x = friend_count), data = pf) +
geom_histogram() +
scale_x_log10()
grid.arrange(logScale, countScale)
logScale <- qplot(x = log10(friend_count + 1), data = pf)
countScale <- ggplot(aes(x = friend_count), data = pf) +
geom_histogram() +
scale_x_log10()
grid.arrange(logScale, countScale, ncol = 2)
logScale <- qplot(x = log10(friend_count + 1), data = pf)
countScale <- ggplot(aes(x = friend_count), data = pf) +
geom_histogram() +
scale_x_log10()
grid.arrange(logScale, countScale, ncol = 2)
ggplot(aes(x = friend_count), data = pf) +
geom_histogram() +
scale_x_log10()
qplot(x = friend_count, data = subset(pf, !is.na(gender)), binwidth = 10) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50))
qplot(x = friend_count, data = subset(pf, !is.na(gender)), binwidth = 10) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50)) +
facet_wrap(~gender)
qplot(x = friend_count, data = subset(pf, !is.na(gender)),
binwidth = 10, geom = 'freqpoly', color = gender) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50)) +
qplot(x = friend_count, data = subset(pf, !is.na(gender)),
binwidth = 10, geom = 'freqpoly', color = gender) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50))
qplot(x = friend_count, y = ..count../sum(..count..),
data = subset(pf, !is.na(gender)),
xlab = 'Friend Count',
ylab = 'Proportion of Users with that friend count',
binwidth = 10, geom = 'freqpoly', color = gender) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50))
ggplot(aes(x = friend_count, y = ..count../sum(..count..)),
data = subset(pf, !is.na(gender))) +
geom_freqpoly(aes(color = gender), binwidth=10) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50)) +
xlab('Friend Count') +
ylab('Proportion of users with that friend count')
ggplot(aes(x = www_likes), data = subset(pf, !is.na(gender))) +
geom_freqpoly(aes(color = gender)) +
scale_x_log10()
names(pf)
qplot(x = www_likes, data=pf)
qplot(x = www_likes, data=subset(pf, !is.na(gender)),
geom = 'freqpoly')
qplot(x = www_likes, data=subset(pf, !is.na(gender)),
geom = 'freqpoly', color = gender)
qplot(x = www_likes, data=subset(pf, !is.na(gender)),
geom = 'freqpoly', color = gender) +
scale_x_continuous()
qplot(x = www_likes, data=subset(pf, !is.na(gender)),
geom = 'freqpoly', color = gender) +
scale_x_continuous() +
scale_x_log10()
ggplot(aes(x = www_likes), data = subset(pf, !is.na(gender))) +
geom_freqpoly(aes(color = gender)) +
scale_x_log10()
qplot(x = www_likes, data=subset(pf, !is.na(gender)),
geom = 'freqpoly', color = gender) +
scale_x_continuous()
qplot(x = www_likes, data=subset(pf, !is.na(gender)),
geom = 'freqpoly', color = gender) +
scale_x_continuous() +
scale_x_log10()
ggplot(aes(x = www_likes), data = subset(pf, !is.na(gender))) +
geom_freqpoly(aes(color = gender)) +
scale_x_log10()
by(pf$www_likes, pf$gender, sum)
qplot(x = gender,
y = friend_count,
data = subset(pf, !is.na(gender), geom = 'boxplot')
qplot(x = gender,, y = friend_count, data=subset(pf, !is.na(gender)),
geom = 'boxplot')
qplot(x = gender,, y = friend_count,
data=subset(pf, !is.na(gender)),
geom = 'boxplot')
qplot(x = gender,, y = friend_count,
data=subset(pf, !is.na(gender)),
geom = 'boxplot',
ylim = c(0, 1000))
qplot(x = gender,, y = friend_count,
data=subset(pf, !is.na(gender)),
geom = 'boxplot') +
scale_y_continuous(limits = c(0, 1000))
qplot(x = gender,, y = friend_count,
data=subset(pf, !is.na(gender)),
geom = 'boxplot') +
coord_cartesian(ylim = c(0, 1000))
qplot(x = gender,, y = friend_count,
data=subset(pf, !is.na(gender)),
geom = 'boxplot') +
coord_cartesian(ylim = c(0, 250))
by(pf$friend_count, pf$gender, summary)
summary(pf$mobile_likes)
summary(pf$mobile_likes > 0)
mobile_checkin <- NA
mobile_checkin <- NA
pf$mobile_check_in <- ifelse(pf$mobile_likes > 0, 1, 0)
pf$mobile_check_in <- factor(pf$mobile_check_in)
summary(pf$mobile_check_in)
sum(pf$mobile_check_in == 1)/length(pf$mobile_check_in)
sum(pf$mobile_check_in == 1)/length(pf$mobile_check_in)
qplot(x = friend_count, data = pf)
library(ggplot2)
data("diamonds")
summary(diamonds)
qplot(diamonds$price)
